package vistas;

import dao.BibliotecaDAO;
import dao.JuegoDAO;
import java.awt.Image;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import modelos.Biblioteca;
import modelos.Juego;
import modelos.Usuario;
import util.JPAUtil;

/**
 *
 * @author Eloym
 */
public class BibliotecaUsuario extends javax.swing.JFrame {

    private Usuario usuario;

    /**
     * Creates new form BibliotecaUsuario
     */
    public BibliotecaUsuario(Usuario usuario) {
        this.usuario = usuario;
        initComponents();
        cargarBibliotecaUsuario();
        this.setResizable(false);
        this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bibliotecaTabla = new javax.swing.JTable();
        btnBorrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        bibliotecaTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "Nombre", "Plataforma", "Fecha Adquisición"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(bibliotecaTabla);

        btnBorrar.setFont(new java.awt.Font("Impact", 2, 24)); // NOI18N
        btnBorrar.setText("Borrar Juego");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        BibliotecaDAO bibliotecaDAO = new BibliotecaDAO(JPAUtil.getEntityManager());

        int filaSeleccionada = bibliotecaTabla.getSelectedRow();
        if (filaSeleccionada == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor, selecciona un juego para borrar.");            
            return;
        }
        
        String nombreJuego = bibliotecaTabla.getValueAt(filaSeleccionada, 1).toString();
        bibliotecaDAO.eliminarPorTituloYUsuario(nombreJuego, usuario);
        cargarBibliotecaUsuario();
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void cargarBibliotecaUsuario() {
        BibliotecaDAO dao = new BibliotecaDAO(JPAUtil.getEntityManager());
        List<Biblioteca> bibliotecaActualizada = dao.buscarPorUsuario(usuario);

        DefaultTableModel model = new DefaultTableModel(new Object[]{"Imagen", "Título", "Plataforma", "Fecha Adquisición"}, 0) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 0) {
                    return Icon.class;
                }
                return String.class;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        for (Biblioteca b : bibliotecaActualizada) {
            Juego juego = b.getJuego();

            ImageIcon icon;
            String rutaImagen = juego.getImagen();

            if (rutaImagen == null || rutaImagen.isEmpty()) {
                switch (juego.getPlataforma()) {
                    case PS:
                        icon = new ImageIcon("imagenes/logos/ps_logo.png");
                        break;
                    case XBOX:
                        icon = new ImageIcon("imagenes/logos/xbox_logo.png");
                        break;
                    case NINTENDO:
                        icon = new ImageIcon("imagenes/logos/nintendo_logo.png");
                        break;
                    default:
                        icon = new ImageIcon("imagenes/juegos/defecto.png");
                }
            } else {
                icon = new ImageIcon(rutaImagen);
            }

            Image img = icon.getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH);
            icon = new ImageIcon(img);

            model.addRow(new Object[]{
                icon,
                juego.getTitulo(),
                juego.getPlataforma().toString(),
                b.getFechaAdquisicion() != null ? b.getFechaAdquisicion().toString() : "Sin fecha"
            });
        }

        bibliotecaTabla.setRowHeight(65);
        bibliotecaTabla.setModel(model);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bibliotecaTabla;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
